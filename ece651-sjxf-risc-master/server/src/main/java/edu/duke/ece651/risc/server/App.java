/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.risc.server;
import edu.duke.ece651.risc.shared.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.MalformedParameterizedTypeException;
import java.nio.Buffer;
import java.util.List;
import java.util.Scanner;

/**
 *The class that starts the server functionality
 */
public class App {
    private TPServer tpServer;
    private Game game;

    /**
     *Constructor for chain of responsibility
     *@param serverPort is the port number that server listens
     *@param numOfHuman is the num of human player in this game
     *@param numOfAI is the num of AI player in this game
     *@param game is the game object being used in server
     */
    public App(int serverPort, int numOfHuman, int numOfAI, Game game) {
        this.tpServer = new TPServer(serverPort, numOfHuman, numOfAI, game);
        this.game = game;
    }

    /**
     *Initialize the game by running the serverRunnable
     */
    public void initializeGame() throws IOException, InterruptedException {
        tpServer.run();
    }

    /**
     * main function that initialize the game, then runs it
     */
    public static void main(String[] args) throws IOException, InterruptedException {
//        System.out.println("Please type in server port, number of human player, number of AI player for each game");
//        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//
//        String si = br.readLine();
//        String[] serverInfo = si.split(" ");
//        int[] serverInfoInt = new int[serverInfo.length];
//        for (int i=0; i<serverInfoInt.length; i++) {
//            serverInfoInt[i] = Integer.valueOf(serverInfo[i]);
//        }

        int[] serverInfoInt = new int[args.length];
        for (int i = 0; i < args.length; i++) {
            serverInfoInt[i] = Integer.valueOf(args[i]);
        }

        GameIntialize gameIntializer = new GameIntialize();
        Game game = gameIntializer.createGame(serverInfoInt[1]+serverInfoInt[2]);

        App app = new App(serverInfoInt[0], serverInfoInt[1], serverInfoInt[2], game);
        app.initializeGame();

//        br.close();
    }
}







